name: copilot cancel deploy
description: cancels a running copilot deploy via cloudformation
inputs:
  environment:
    description: the environment name
    required: true
  service:
    description: the service name
    required: true
  aws_region:
    description: AWS region
    required: false
    default: us-west-2

runs:
  using: composite
  steps:
    - name: get copilot app name
      id: app-name
      shell: bash
      run: |
        app=$(yq .application copilot/.workspace)
        echo "::set-output name=name::$app"
    - name: Get Env Role ARN
      id: env-role-arn
      shell: bash
      run: |
        ROLE_ARN=$(copilot env show -n "${{inputs.environment}}" --json | jq -r .environment.managerRoleARN)
        echo "::set-output name=role-arn::${ROLE_ARN}"
    - name: Assume Env Account Role
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ steps.env-role-arn.outputs.role-arn }}
        role-duration-seconds: "3600"
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
        mask-aws-account-id: false
        role-skip-session-tagging: true
    - name: cancel deploy
      shell: bash
      env:
        APP: "${{ steps.app-name.outputs.name }}"
        ENV: "${{ inputs.environment }}"
        SVC: "${{ inputs.service }}"
      run: |
        STACK="${APP}-${ENV}-${SVC}"
        echo Cancelling CloudFormation stack \'"$STACK"\'

        STATUS=$(aws cloudformation describe-stacks --stack-name "$STACK" | jq -r '.Stacks[0].StackStatus')

        if [[ "$STATUS" == "UPDATE_IN_PROGRESS" ]]; then
            aws cloudformation cancel-update-stack --stack-name "$STACK"
            echo Stack update cancelled, rollback in progress
        else
            echo Cannot cancel deploy, stack is in state \'$STATUS\'
            exit 1
        fi
