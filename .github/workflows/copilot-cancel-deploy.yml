# Cancel a Copilot deploy by cancelling the CF stack update
name: Copilot Cancel Deploy

on:
  workflow_call:
    inputs:
      application:
        description: The Copilot application name
        required: true
        type: string
      environment:
        description: The app environment to deploy to
        required: true
        type: string
      service:
        description: The copilot service to deploy
        required: true
        type: string
      role_to_assume:
        description: The IAM role to assume using the key/secret creds
        required: false
        type: string
      second_role_to_assume:
        description: A 2nd IAM role in the chain
        required: false
        type: string
      hub_account_role:
        description: The first role we assume, into the central hub account
        required: false
        type: string
      app_account_role:
        description: The second role we assume, into the copilot app account
        required: false
        type: string
      aws_region:
        required: false
        type: string
        default: us-west-2

jobs:
  cancel:
    name: Cancel
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup AWS Copilot
        uses: flemzord/setup-aws-copilot@v1.3

      - name: Assume Hub Account Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.hub_account_role || inputs.role_to_assume }}
          role-duration-seconds: 3600
          role-session-name: GithubActionDeployCancel

      - name: Assume App Account Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.app_account_role || inputs.second_role_to_assume }}
          role-duration-seconds: 3600
          role-session-name: GithubActionDeployCancel
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}

      - name: Get Env Role ARN
        id: env-role-arn
        env:
          ENV: "${{ inputs.environment }}"
        run: |
          ROLE_ARN=$(copilot env show -n "$ENV" --json | jq -r .environment.managerRoleARN)
          echo "::set-output name=role-arn::${ROLE_ARN}"

      - name: Assume Env Account Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ steps.env-role-arn.outputs.role-arn }}
          role-duration-seconds: 3600
          role-session-name: GithubActionDeployCancel
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}

      - name: Cancel Deploy
        env:
          APP: "${{ inputs.application }}"
          ENV: "${{ inputs.environment }}"
          SVC: "${{ inputs.service }}"
        run: |
          STACK="${APP}-${ENV}-${SVC}"
          echo Cancelling CloudFormation stack \'"$STACK"\'

          STATUS=$(aws cloudformation describe-stacks --stack-name "$STACK" | jq -r '.Stacks[0].StackStatus')

          if [[ "$STATUS" == "UPDATE_IN_PROGRESS" ]]; then
              aws cloudformation cancel-update-stack --stack-name "$STACK"
              echo Stack update cancelled, rollback in progress
          else
              echo Cannot cancel deploy, stack is in state \'$STATUS\'
              exit 1
          fi
